" =============================================
" .vimrc configuration file
" Author: Oliver Strassmann
" Last updated: 13. March 2019
" =============================================

set nocompatible              " be iMproved, required
filetype off                  " required
filetype plugin on " to determine type specific language

" Line numbers
set number

" Syntax highlighting
syntax on
syntax enable
colorscheme monokai

" set tabs to 4 spaces
set tabstop=4
set softtabstop=4
set shiftwidth=4
set noexpandtab

" Automatic reloading of .vimrc
" autocmd! bufwritepost .vimrc source %
augroup myvimrc
    au!
    au BufWritePost .vimrc,_vimrc,vimrc,.gvimrc,_gvimrc,gvimrc so $MYVIMRC | if has('gui_running') | so $MYGVIMRC | endif
augroup END

" Copy/Paste
set clipboard=unnamed

" Quicksave
noremap <C-W> :update<CR>
vnoremap <C-W> <C-C>:update<CR>
inoremap <C-W> <C-O>:update<CR> Quicksave

" Indentation - does not lose selection after indent
vnoremap < < gv  
vnoremap > > gv  

" bind Ctrl+<movement> keys to move around windows, instead of Ctrl+w + <movement>
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" set current file's directory automaticaly
set autochdir

" automatic matching braces""""""""""""""""""""""""""""""""""""""""""""""""""""

inoremap ( ()<left>
inoremap { {}<left>
inoremap [ []<left>

" highlight search results""""""""""""""""""""""""""""""""""""""""""""""""""""

" Press F4 to toggle highlighting on/off, and show current value.
:noremap <F4> :set hlsearch! hlsearch?<CR>

" This rewires n and N to do the highlighing...
nnoremap <silent> n   n:call HLNext(0.4)<cr>
nnoremap <silent> N   N:call HLNext(0.4)<cr>

highlight theColors ctermfg=black ctermbg=yellow
" Stolen from: yt dude...
    function! HLNext (blinktime)
        let [bufnum, lnum, col, off] = getpos('.')
        let matchlen = strlen(matchstr(strpart(getline('.'),col-1),@/))
        let target_pat = '\c\%#\%('.@/.'\)'
        let ring = matchadd('theColors', target_pat, 101)
        redraw
        exec 'sleep ' . float2nr(a:blinktime * 1000) . 'm'
        call matchdelete(ring)
        redraw
    endfunction

" Drag visual blocks""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
 
runtime plugin/dragvisuals.vim " load plugin

""""remove any introduced trailing whitespace after moving... 
let g:DVB_TrimWS = 1                                            
                                                                    
" Or, if you use the arrow keys for normal motions, choose four other keys for block dragging. For example:	
vmap  <expr>  h        DVB_Drag('left')                         
vmap  <expr>  l        DVB_Drag('right')                        
vmap  <expr>  j        DVB_Drag('down')                         
vmap  <expr>  k        DVB_Drag('up')  
